"use strict";(self.webpackChunkmy_learning_curve=self.webpackChunkmy_learning_curve||[]).push([[564],{3714:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>j,frontMatter:()=>i,metadata:()=>o,toc:()=>b});var s=n(4848),c=n(8453),r=n(1432);const a="/**\n * Creates a new object with the same keys as the given object,\n * and values generated by running each own enumerable string keyed property of the object thru the function.\n *\n * @param {Object.<string, ObjectValue>} object - The object to iterate over.\n * @param {(value: ObjectValue) => Returned} fn - The function invoked per iteration.\n * @returns {Object.<string, Returned>} The new object with the same keys and mapped values.\n *\n * @template ObjectValue The type of the values in the input object.\n * @template Returned The type of the values in the returned object.\n *\n * @example\n * const object = { a: 1, b: 2 };\n * const fn = (value) => value * 2;\n * const result = mapObject(object, fn); // { a: 2, b: 4 }\n */\nexport const mapObject = <\n  ObjectValue,\n  Returned,\n  Result extends Record<string, Returned>,\n>(\n  object: { [key: string]: ObjectValue },\n  fn: (value: ObjectValue) => Returned,\n): Result =>\n  Object.fromEntries(\n    Object.entries(object).map(([key, value]) => [key, fn(value)]),\n  ) as Result\n",i={},p="Map over object",o={id:"snippets/Typescript/Object/map-object",title:"Map over object",description:"",source:"@site/docs/snippets/Typescript/Object/map-object.mdx",sourceDirName:"snippets/Typescript/Object",slug:"/snippets/Typescript/Object/map-object",permalink:"/my-learning-curve/docs/snippets/Typescript/Object/map-object",draft:!1,unlisted:!1,editUrl:"https://github.com/edouardmisset/my-learning-curve/tree/main/docs/snippets/Typescript/Object/map-object.mdx",tags:[],version:"current",frontMatter:{},sidebar:"snippetsSidebar",previous:{title:"Check if a value is a plain object",permalink:"/my-learning-curve/docs/snippets/Typescript/Object/is-plain-object"},next:{title:"Type safe way to get an object's keys",permalink:"/my-learning-curve/docs/snippets/Typescript/Object/object-keys"}},u={},b=[];function l(e){const t={h1:"h1",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"map-over-object",children:"Map over object"}),"\n",(0,s.jsx)(r.A,{language:"ts",children:a})]})}function j(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);