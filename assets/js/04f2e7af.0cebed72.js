"use strict";(self.webpackChunkmy_learning_curve=self.webpackChunkmy_learning_curve||[]).push([[2644],{3647:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>p,contentTitle:()=>u,default:()=>f,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var t=i(5893),s=i(1151),c=i(9286);const o="/**\n * Checks if the provided value is a function.\n *\n * @param {unknown} maybeFunction - The value to check.\n * @returns {boolean} Returns `true` if `maybeFunction` is a function, else `false`.\n *\n * @example\n * isFunction(function() {});\n * // => true\n *\n * @example\n * isFunction('not a function');\n * // => false\n */\n\n// biome-ignore lint/complexity/noBannedTypes: this is a very generic function\nexport const isFunction = (maybeFunction: unknown): maybeFunction is Function =>\n  typeof maybeFunction === 'function'\n",r={},u="Check if the provided value is a function",a={id:"snippets/Typescript/Function/is-function",title:"Check if the provided value is a function",description:"",source:"@site/docs/snippets/Typescript/Function/is-function.mdx",sourceDirName:"snippets/Typescript/Function",slug:"/snippets/Typescript/Function/is-function",permalink:"/my-learning-curve/docs/snippets/Typescript/Function/is-function",draft:!1,unlisted:!1,editUrl:"https://github.com/edouardmisset/my-learning-curve/tree/main/docs/snippets/Typescript/Function/is-function.mdx",tags:[],version:"current",frontMatter:{},sidebar:"snippetsSidebar",previous:{title:"Is the collection empty?",permalink:"/my-learning-curve/docs/snippets/Typescript/Function/is-empty"},next:{title:"Check if the provided argument is a valid JSON",permalink:"/my-learning-curve/docs/snippets/Typescript/Function/is-valid-json"}},p={},l=[];function d(n){const e={h1:"h1",...(0,s.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"check-if-the-provided-value-is-a-function",children:"Check if the provided value is a function"}),"\n",(0,t.jsx)(c.Z,{language:"ts",children:o})]})}function f(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}}}]);