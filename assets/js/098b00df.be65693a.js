"use strict";(self.webpackChunkmy_learning_curve=self.webpackChunkmy_learning_curve||[]).push([[7894],{2679:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>m,metadata:()=>p,toc:()=>o});var s=r(4848),t=r(8453),u=r(1432);const a="/**\n * This function calculates the sum of all numbers provided as arguments.\n * It accepts either a single array of numbers or multiple number arguments.\n *\n * @param {...(number[] | number)[]} num - The numbers to sum.\n * @returns {number} The sum of all numbers.\n *\n * @example\n * sum(1, 2, 3)\n * // returns 6\n *\n * @example\n * sum([1, 2, 3])\n * // returns 6\n *\n * @example\n * sum([])\n * // returns 0\n */\nexport const sum = (...num: (number[] | number)[]): number =>\n  (Array.isArray(num[0]) ? num[0] : (num as number[])).reduce(\n    (accumulator, value) => accumulator + value,\n    0,\n  )\n",m={},i="Sum an array of numbers",p={id:"snippets/Typescript/Number/sum",title:"Sum an array of numbers",description:"",source:"@site/docs/snippets/Typescript/Number/sum.mdx",sourceDirName:"snippets/Typescript/Number",slug:"/snippets/Typescript/Number/sum",permalink:"/my-learning-curve/docs/snippets/Typescript/Number/sum",draft:!1,unlisted:!1,editUrl:"https://github.com/edouardmisset/my-learning-curve/tree/main/docs/snippets/Typescript/Number/sum.mdx",tags:[],version:"current",frontMatter:{},sidebar:"snippetsSidebar",previous:{title:"Standard Deviation and Variance",permalink:"/my-learning-curve/docs/snippets/Typescript/Number/standard-deviation"},next:{title:"Convert a number to a string with a fixed number of decimal places without trailing zeros",permalink:"/my-learning-curve/docs/snippets/Typescript/Number/to-fixed-without-zero"}},c={},o=[];function l(e){const n={h1:"h1",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"sum-an-array-of-numbers",children:"Sum an array of numbers"}),"\n",(0,s.jsx)(u.A,{language:"ts",children:a})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);