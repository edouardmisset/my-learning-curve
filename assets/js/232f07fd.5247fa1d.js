"use strict";(self.webpackChunkmy_learning_curve=self.webpackChunkmy_learning_curve||[]).push([[5299],{2793:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>u,toc:()=>p});var r=t(4848),i=t(8453),s=t(1432);const o="// biome-ignore lint/suspicious/noExplicitAny: ... because it's a helper file\ntype AnyVoidFunction = (...arg: any[]) => void\ninterface DebounceParams {\n  callback: AnyVoidFunction\n  timerId?: { id: number }\n  delay?: number\n}\ntype ThrottleParams = Omit<DebounceParams, 'timerId'>\n\nexport const debounce = (params: DebounceParams): AnyVoidFunction => {\n  const { callback, timerId = { id: -1 }, delay = 50 } = params\n\n  return (...args) => {\n    if (timerId.id !== -1) window.clearTimeout(timerId.id)\n\n    timerId.id = window.setTimeout(() => {\n      callback.apply(this, args)\n    }, delay)\n  }\n}\n\nexport const throttle = (params: ThrottleParams): AnyVoidFunction => {\n  const { callback, delay = 100 } = params\n  let throttlePause: boolean\n\n  return (...args) => {\n    if (throttlePause === true) return\n\n    throttlePause = true\n    setTimeout(() => {\n      callback.apply(this, args)\n      throttlePause = false\n    }, delay)\n  }\n}\n",a={},c="Throttle & Debounce Functions",u={id:"snippets/Typescript/Function/throttle-debounce",title:"Throttle & Debounce Functions",description:"",source:"@site/docs/snippets/Typescript/Function/throttle-debounce.mdx",sourceDirName:"snippets/Typescript/Function",slug:"/snippets/Typescript/Function/throttle-debounce",permalink:"/my-learning-curve/docs/snippets/Typescript/Function/throttle-debounce",draft:!1,unlisted:!1,editUrl:"https://github.com/edouardmisset/my-learning-curve/tree/main/docs/snippets/Typescript/Function/throttle-debounce.mdx",tags:[],version:"current",frontMatter:{},sidebar:"snippetsSidebar",previous:{title:"Sleep",permalink:"/my-learning-curve/docs/snippets/Typescript/Function/sleep"},next:{title:"Calculate the average value",permalink:"/my-learning-curve/docs/snippets/Typescript/Number/average"}},l={},p=[];function d(e){const n={h1:"h1",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"throttle--debounce-functions",children:"Throttle & Debounce Functions"}),"\n",(0,r.jsx)(s.A,{language:"ts",children:o})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);