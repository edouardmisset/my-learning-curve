"use strict";(self.webpackChunkmy_learning_curve=self.webpackChunkmy_learning_curve||[]).push([[238],{6202:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>y,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>b});var n=s(5893),c=s(1151),o=s(9286);const r="/**\n * Returns an array of the keys of an object.\n *\n * This code snippet defines a function called `objectKeys` that takes an object as input and returns an array of its keys. It ensures that the TypeScript compiler knows the keys are of type `keyof T`, not just `string`.\n *\n * This function uses the `Object.keys` method from JavaScript, and then casts the result to `(keyof T)[]`.\n * This ensures that the TypeScript compiler knows that the keys are of type `keyof T`, not just `string`.\n *\n * @template Obj The type of the object. It extends `ObjectType`, which means it can be any object type.\n *\n * @param {Obj} object The object to get the keys from.\n *\n * @returns {(keyof Obj)[]} An array of the keys of the object.\n *\n * @example\n * const person = { name: 'Alice', age: 25 };\n * const keys = objectKeys(person); // ['name', 'age']\n */\nexport const objectKeys = <Obj extends Record<string, unknown>>(\n  object: Obj,\n): (keyof Obj)[] => Object.keys(object) as (keyof Obj)[]\n",a={},i="Type safe way to get an object's keys",p={id:"snippets/Typescript/Object/object-keys",title:"Type safe way to get an object's keys",description:"",source:"@site/docs/snippets/Typescript/Object/object-keys.mdx",sourceDirName:"snippets/Typescript/Object",slug:"/snippets/Typescript/Object/object-keys",permalink:"/my-learning-curve/docs/snippets/Typescript/Object/object-keys",draft:!1,unlisted:!1,editUrl:"https://github.com/edouardmisset/my-learning-curve/tree/main/docs/snippets/Typescript/Object/object-keys.mdx",tags:[],version:"current",frontMatter:{},sidebar:"snippetsSidebar",previous:{title:"Map over object",permalink:"/my-learning-curve/docs/snippets/Typescript/Object/map-object"},next:{title:"Get the size (number of keys) of an object",permalink:"/my-learning-curve/docs/snippets/Typescript/Object/object-size"}},y={},b=[];function j(e){const t={h1:"h1",...(0,c.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"type-safe-way-to-get-an-objects-keys",children:"Type safe way to get an object's keys"}),"\n",(0,n.jsx)(o.Z,{language:"ts",children:r})]})}function u(e={}){const{wrapper:t}={...(0,c.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(j,{...e})}):j(e)}}}]);