"use strict";(self.webpackChunkmy_learning_curve=self.webpackChunkmy_learning_curve||[]).push([[1018],{1070:(r,e,t)=>{t.r(e),t.d(e,{assets:()=>y,contentTitle:()=>p,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var n=t(4848),s=t(8453),o=t(1432);const a="/**\n * Sorts an array of objects by a specified property in ascending or descending order.\n *\n * @template Obj - A type that extends Record<string, unknown>.\n * @param {Obj[]} arr - The array to sort.\n * @param {keyof Obj} property - The property to sort by.\n * @param {boolean} [ascending=true] - Whether to sort in ascending order. If false, sorts in descending order.\n * @returns {Obj[]} - The sorted array.\n */\nexport const sortBy = <Obj extends Record<string, unknown>>(\n  arr: Obj[],\n  property: keyof Obj,\n  ascending = true,\n): Obj[] =>\n  [...arr].sort((left, right) => {\n    const leftValue = left[property]\n    const rightValue = right[property]\n    const order = ascending ? 1 : -1\n\n    if (typeof leftValue === 'string' && typeof rightValue === 'string') {\n      return leftValue.localeCompare(rightValue) * order\n    }\n\n    if (typeof leftValue === 'number' && typeof rightValue === 'number') {\n      return (leftValue - rightValue) * order\n    }\n\n    return 0\n  })\n",i={},p="Sort an array by one of its properties",c={id:"snippets/Typescript/Array/sort-by",title:"Sort an array by one of its properties",description:"",source:"@site/docs/snippets/Typescript/Array/sort-by.mdx",sourceDirName:"snippets/Typescript/Array",slug:"/snippets/Typescript/Array/sort-by",permalink:"/my-learning-curve/docs/snippets/Typescript/Array/sort-by",draft:!1,unlisted:!1,editUrl:"https://github.com/edouardmisset/my-learning-curve/tree/main/docs/snippets/Typescript/Array/sort-by.mdx",tags:[],version:"current",frontMatter:{},sidebar:"snippetsSidebar",previous:{title:"Select a property in an array of objects",permalink:"/my-learning-curve/docs/snippets/Typescript/Array/select-by"},next:{title:"Sort HOF",permalink:"/my-learning-curve/docs/snippets/Typescript/Array/sort"}},y={},l=[];function d(r){const e={h1:"h1",...(0,s.R)(),...r.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"sort-an-array-by-one-of-its-properties",children:"Sort an array by one of its properties"}),"\n",(0,n.jsx)(o.A,{language:"ts",children:a})]})}function u(r={}){const{wrapper:e}={...(0,s.R)(),...r.components};return e?(0,n.jsx)(e,{...r,children:(0,n.jsx)(d,{...r})}):d(r)}}}]);