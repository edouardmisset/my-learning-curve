"use strict";(self.webpackChunkmy_learning_curve=self.webpackChunkmy_learning_curve||[]).push([[9315],{6911:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>p,toc:()=>l});var i=s(5893),t=s(1151),r=s(9286);const a="/**\n * Checks if a string is valid JSON.\n *\n * @param {string} str - The string to check.\n * @returns {boolean} - Returns true if the string is valid JSON, otherwise false.\n */\nexport const isValidJSON = (str: string): boolean => {\n  try {\n    JSON.parse(str)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n",c={},o="Check if the provided argument is a valid JSON",p={id:"snippets/Typescript/Function/is-valid-json",title:"Check if the provided argument is a valid JSON",description:"Credits: [Angelos",source:"@site/docs/snippets/Typescript/Function/is-valid-json.mdx",sourceDirName:"snippets/Typescript/Function",slug:"/snippets/Typescript/Function/is-valid-json",permalink:"/my-learning-curve/docs/snippets/Typescript/Function/is-valid-json",draft:!1,unlisted:!1,editUrl:"https://github.com/edouardmisset/my-learning-curve/tree/main/docs/snippets/Typescript/Function/is-valid-json.mdx",tags:[],version:"current",frontMatter:{},sidebar:"snippetsSidebar",previous:{title:"Check if the provided value is a function",permalink:"/my-learning-curve/docs/snippets/Typescript/Function/is-function"},next:{title:"Pipe & Compose",permalink:"/my-learning-curve/docs/snippets/Typescript/Function/pipe"}},d={},l=[];function u(e){const n={a:"a",h1:"h1",p:"p",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"check-if-the-provided-argument-is-a-valid-json",children:"Check if the provided argument is a valid JSON"}),"\n",(0,i.jsx)(r.Z,{language:"ts",children:a}),"\n",(0,i.jsxs)(n.p,{children:["Credits: ",(0,i.jsx)(n.a,{href:"https://www.30secondsofcode.org/js/s/is-valid-json/",children:"Angelos\nChalaris"})]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);