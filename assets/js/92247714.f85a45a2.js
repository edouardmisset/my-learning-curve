"use strict";(self.webpackChunkmy_learning_curve=self.webpackChunkmy_learning_curve||[]).push([[7605],{8808:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>c});var s=a(4848),r=a(8453);const o={authors:["Edouard"],tags:["JavaScript","ES6","Destructuring","Nested Property","Function Arguments","Variables Swapping"]},i="Destructuring Assignment",t={permalink:"/my-learning-curve/blog/03-desctructuring",editUrl:"https://github.com/edouardmisset/my-learning-curve/tree/main/blog/03-desctructuring.md",source:"@site/blog/03-desctructuring.md",title:"Destructuring Assignment",description:"The concept",date:"2021-04-28T08:43:09.000Z",tags:[{label:"JavaScript",permalink:"/my-learning-curve/blog/tags/java-script"},{label:"ES6",permalink:"/my-learning-curve/blog/tags/es-6"},{label:"Destructuring",permalink:"/my-learning-curve/blog/tags/destructuring"},{label:"Nested Property",permalink:"/my-learning-curve/blog/tags/nested-property"},{label:"Function Arguments",permalink:"/my-learning-curve/blog/tags/function-arguments"},{label:"Variables Swapping",permalink:"/my-learning-curve/blog/tags/variables-swapping"}],readingTime:2.565,hasTruncateMarker:!1,authors:[{name:"Edouard Misset",title:"Full Stack Engineer",url:"https://github.com/edouardmisset",imageURL:"https://github.com/edouardmisset.png",key:"Edouard"}],frontMatter:{authors:["Edouard"],tags:["JavaScript","ES6","Destructuring","Nested Property","Function Arguments","Variables Swapping"]},unlisted:!1,prevItem:{title:"Memoization",permalink:"/my-learning-curve/blog/04-memoization"}},l={authorsImageUrls:[void 0]},c=[{value:"The concept",id:"the-concept",level:2},{value:"Examples",id:"examples",level:2},{value:"With arrays",id:"with-arrays",level:3},{value:"The bascis",id:"the-bascis",level:4},{value:"Using the spread operator",id:"using-the-spread-operator",level:4},{value:"Using a default value",id:"using-a-default-value",level:4},{value:"With objects",id:"with-objects",level:3},{value:"The basics",id:"the-basics",level:4},{value:"Using the spread operator",id:"using-the-spread-operator-1",level:4},{value:"Using a default value",id:"using-a-default-value-1",level:4},{value:"Renaming property",id:"renaming-property",level:4},{value:"Nested property",id:"nested-property",level:4},{value:"Desctructuring within function arguments",id:"desctructuring-within-function-arguments",level:4},{value:"Bonus",id:"bonus",level:2},{value:"Variables swapping",id:"variables-swapping",level:4},{value:"Computed property name",id:"computed-property-name",level:4},{value:"Conditionally added property / value",id:"conditionally-added-property--value",level:4},{value:"Resources",id:"resources",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"the-concept",children:"The concept"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"destructuring assignment"})," syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables.\nAvailable from ES6 (2015) onward."]}),"\n",(0,s.jsx)(n.p,{children:"OR"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Take values from arrays or properties from objects and set them as local variables."}),"\n",(0,s.jsx)(n.p,{children:"~ Fireship.io"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"with-arrays",children:"With arrays"}),"\n",(0,s.jsx)(n.h4,{id:"the-bascis",children:"The bascis"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// The basics\nconst food = ['\ud83e\udd53', '\ud83c\udf55', '\ud83c\udf5f', '\ud83c\udf54', '\ud83c\udf2e']\nconst [bacon, , , , taco] = food\n\nconsole.log(bacon, taco) // \ud83e\udd53 \ud83c\udf2e\n"})}),"\n",(0,s.jsx)(n.h4,{id:"using-the-spread-operator",children:"Using the spread operator"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Using the spread operator\nconst food = ['\ud83e\udd53', '\ud83c\udf55', '\ud83c\udf5f', '\ud83e\udd6c', '\ud83e\udd66']\nconst [, , , ...noJunkFood] = food\n\nconsole.log(noJunkFood) // [ '\ud83e\udd6c', '\ud83e\udd66' ]\n"})}),"\n",(0,s.jsx)(n.h4,{id:"using-a-default-value",children:"Using a default value"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Using a default value\nconst food = [undefined, '\ud83c\udf55', '\ud83c\udf5f']\nconst [bacon = '\ud83d\udc16', pizza, fries] = food\n\nconsole.log(bacon) // \ud83d\udc16\n"})}),"\n",(0,s.jsx)(n.h3,{id:"with-objects",children:"With objects"}),"\n",(0,s.jsx)(n.h4,{id:"the-basics",children:"The basics"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// The basics\nconst animals = {\n  snake: '\ud83d\udc0d',\n  monkey: '\ud83d\udc35',\n  octopus: '\ud83d\udc19',\n}\nconst { octopus } = animals\n\nconsole.log(octopus) // \ud83d\udc19\n"})}),"\n",(0,s.jsx)(n.h4,{id:"using-the-spread-operator-1",children:"Using the spread operator"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Using the spread operator\nconst animals = {\n  snake: '\ud83d\udc0d',\n  monkey: '\ud83d\udc35',\n  octopus: '\ud83d\udc19',\n}\nconst { ...rest } = animals\n\nconsole.log(rest) // { snake: '\ud83d\udc0d', monkey: '\ud83d\udc35', octopus: '\ud83d\udc19' }\n\n// Overriding a value using the spread operator\nconst animals = {\n  snake: '\ud83d\udc0d',\n  monkey: '\ud83d\udc35',\n  octopus: '\ud83d\udc19',\n}\nconst newAnimals = { ...animals, snake: '\ud83e\udd8e' }\n\nconsole.log(newAnimals) // { snake: '\ud83e\udd8e', monkey: '\ud83d\udc35', octopus: '\ud83d\udc19' }\n"})}),"\n",(0,s.jsx)(n.h4,{id:"using-a-default-value-1",children:"Using a default value"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Using a default value\nconst animals = {\n  snake: '\ud83d\udc0d',\n  monkey: '\ud83d\udc35',\n  octopus: undefined,\n}\nconst { octopus = '\ud83e\udd91' } = animals\n\nconsole.log(octopus) // \ud83e\udd91\n"})}),"\n",(0,s.jsx)(n.h4,{id:"renaming-property",children:"Renaming property"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Renaming property\nconst animals = {\n  snake: '\ud83d\udc0d',\n  monkey: '\ud83d\udc35',\n  octopus: '\ud83e\udd91',\n}\nconst { octopus: squid } = animals\n\nconsole.log(squid) // \ud83e\udd91\n"})}),"\n",(0,s.jsx)(n.h4,{id:"nested-property",children:"Nested property"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Nested property\nconst family = {\n  parent: {\n    child: '\ud83d\udc76',\n  },\n}\nconst {\n  parent: { child },\n} = family\n\nconsole.log(child) // \ud83d\udc76\n"})}),"\n",(0,s.jsx)(n.h4,{id:"desctructuring-within-function-arguments",children:"Desctructuring within function arguments"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Desctructuring within function arguments\nconst user = {\n  id: 0,\n  name: 'John',\n}\n\nfunction sayHi({ id, name }) {\n  console.log(`Hi ${name}!`)\n}\n\nsayHi(user) // Hi John!\n"})}),"\n",(0,s.jsx)(n.h2,{id:"bonus",children:"Bonus"}),"\n",(0,s.jsx)(n.h4,{id:"variables-swapping",children:"Variables swapping"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Variables swapping\nlet a = 'foo'\nlet b = 'bar'\n\n;[a, b] = [b, a]\n\nconsole.log('a:', a, 'b:', b) // a: bar b: foo\n"})}),"\n",(0,s.jsx)(n.h4,{id:"computed-property-name",children:"Computed property name"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Computed property name\nconst rando = randomKey()\n\nconst obj = {\n  [rando]: 42,\n}\n\nconst { [rando]: myKey } = obj\n"})}),"\n",(0,s.jsx)(n.h4,{id:"conditionally-added-property--value",children:"Conditionally added property / value"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const trueCondition = true\nconst falseCondition = false\n\nconst obj = {\n  ...(trueCondition && { '\ud83d\udc15': 'woof' }),\n  ...(falseCondition && { '\ud83d\udc08': 'meow' }),\n}\n\nconsole.log(obj)\n// { '\ud83d\udc15': 'woof' }\n\nconst arr = [\n  ...(trueCondition ? ['\ud83d\udc15'] : []),\n  ...(falseCondition ? ['\ud83d\udc08'] : []),\n]\n\nconsole.log(arr)\n// [ '\ud83d\udc15' ]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,s.jsxs)(n.p,{children:["Introduction by ",(0,s.jsx)(n.a,{href:"https://www.youtube.com/watch?v=UgEaJBz3bjY",children:"Fireship.io"})]}),"\n",(0,s.jsxs)(n.p,{children:["Official documentation on ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment",children:"MDN"})]}),"\n",(0,s.jsxs)(n.p,{children:["Adoption on ",(0,s.jsx)(n.a,{href:"https://caniuse.com/mdn-javascript_operators_destructuring",children:"CanIUse"})]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);