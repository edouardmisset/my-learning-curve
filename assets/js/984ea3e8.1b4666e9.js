"use strict";(self.webpackChunkmy_learning_curve=self.webpackChunkmy_learning_curve||[]).push([[5292],{5490:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var a=i(5893),t=i(1151);const s={},o="Data Cleaning",r={id:"documentation/Data Analysis/data-cleaning",title:"Data Cleaning",description:"Removing Duplicates",source:"@site/docs/documentation/Data Analysis/03-data-cleaning.md",sourceDirName:"documentation/Data Analysis",slug:"/documentation/Data Analysis/data-cleaning",permalink:"/my-learning-curve/docs/documentation/Data Analysis/data-cleaning",draft:!1,unlisted:!1,editUrl:"https://github.com/edouardmisset/my-learning-curve/tree/main/docs/documentation/Data Analysis/03-data-cleaning.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Data Gathering",permalink:"/my-learning-curve/docs/documentation/Data Analysis/data-gathering"},next:{title:"Explore Data",permalink:"/my-learning-curve/docs/documentation/Data Analysis/explore-data"}},l={},d=[{value:"Removing Duplicates",id:"removing-duplicates",level:2},{value:"Handling missing values",id:"handling-missing-values",level:2},{value:"Outlier detection and handling",id:"outlier-detection-and-handling",level:3},{value:"Data Transformation",id:"data-transformation",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"data-cleaning",children:"Data Cleaning"}),"\n",(0,a.jsx)(n.mermaid,{value:"graph LR;\nA[Start] --\x3e B{Remove Duplicates};\nB --\x3e C{Handle Missing Data};\nC --\x3e D{Data Transformation};\nD --\x3e E[End];"}),"\n",(0,a.jsx)(n.h2,{id:"removing-duplicates",children:"Removing Duplicates"}),"\n",(0,a.jsx)(n.p,{children:"Duplicates can give certain data points more weight than they should have."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const data = [\n  { id: 1, value: 'A' },\n  { id: 2, value: 'B' },\n  { id: 1, value: 'A' }, // duplicate\n]\n\n// Remove duplicates\ndata = data.filter(\n  (item, index, arr) =>\n    index === arr.findIndex(t => t.id === item.id && t.value === item.value),\n)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"handling-missing-values",children:"Handling missing values"}),"\n",(0,a.jsx)(n.p,{children:"Here are some common methods:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Deletion"}),": This is the simplest method where you remove the rows or columns\nwith missing values. This method is only recommended when the missing data is\nlimited and random."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Imputation"}),": This involves filling the missing values with substituted\nvalues. The substituted values can be:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Mean/Median/Mode Imputation"}),": Replace missing values with the mean, median,\nor mode of the column."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Predictive Imputation"}),": Use statistical models such as regression models to\npredict missing values based on other data.\nLast Observation Carried Forward (LOCF) or Next Observation Carried Backward\n(NOCB): These are commonly used in time-series data where missing values are\nfilled with the previous or next observations."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Interpolation"}),": This method is often used for time-series data. It involves\nusing other data points to fill the missing values. Linear interpolation is one\nof the most common methods."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Assigning a Unique Category"}),": For categorical data, missing values can be\nassigned a unique category (like 'Unknown')."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Using Algorithms that Support Missing Values"}),": Some machine learning\nalgorithms can handle missing values, such as XGBoost or LightGBM."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Remember, the method you choose depends on the nature of your data and the\nspecific requirements of your analysis. It's also important to understand the\nreasons why data might be missing, as this can influence your choice of method."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const data = [\n  { id: 1, value: 'A' },\n  { id: 2, value: null }, // missing value\n]\n\n// Drop rows with missing data\ndata = data.filter(item => item.value !== null)\n\n// Or fill missing data with a specific value (e.g., 'Unknown')\ndata = data.map(item => ({ ...item, value: item.value ?? 'Unknown' }))\n"})}),"\n",(0,a.jsx)(n.h3,{id:"outlier-detection-and-handling",children:"Outlier detection and handling"}),"\n",(0,a.jsx)(n.p,{children:"Here are some common techniques:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Z-Score"}),": The Z-score is a measure of how many standard deviations an element\nis from the mean. Any data point that has a Z-score greater than 3 or less than\n-3 is considered an outlier."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"IQR Method"}),": The Interquartile Range (IQR) is the range between the first\nquartile (25 percentile) and the third quartile (75 percentile). Any data point\nthat falls below Q1 - 1.5IQR or above Q3 + 1.5IQR is considered an outlier."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Box Plot"}),": Box plots visually show the median, quartiles and potential\noutliers. Any data point that falls outside of the whiskers in the box plot is\nconsidered an outlier."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"DBSCAN Clustering"}),": Density-Based Spatial Clustering of Applications with\nNoise (DBSCAN) is a density-based clustering algorithm, which can be used to\ndetect the outliers. In DBSCAN, a data point is an outlier if it is not part of\na cluster."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Isolation Forest"}),": Isolation Forest is a machine learning algorithm for\nanomaly detection. It isolates outliers by randomly selecting a feature and then\nrandomly selecting a split value between the maximum and minimum values of that\nselected feature."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Once outliers are detected, you can choose to either drop these values,\ncap/floor them, or use statistical methods to adjust them. The choice depends on\nthe nature of your data and the specific requirements of your analysis."}),"\n",(0,a.jsx)(n.h3,{id:"data-transformation",children:"Data Transformation"}),"\n",(0,a.jsx)(n.p,{children:"Sometimes, data needs to be transformed to be useful. This could involve\ncreating new columns based on existing ones, or converting data types."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const data = [\n  { id: '1', value: 'A' }, // 'id' is a string\n]\n\n// Convert a column to a different data type\ndata = data.map(item => ({ ...item, id: parseInt(item.id) }))\n\n// Create a new column based on an existing one\ndata = data.map(item => ({ ...item, valueLowercase: item.value.toLowerCase() }))\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);