"use strict";(self.webpackChunkmy_learning_curve=self.webpackChunkmy_learning_curve||[]).push([[4196],{6629:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>y});var r=t(5893),s=t(1151),a=t(9286);const c="/**\n * Counts the number of elements in an array that satisfy a condition.\n *\n * @param {T[]} arr - The array to process.\n * @param {(arg: T) => boolean} checkFunction - The function to test each element of the array.\n * This function should accept a single argument of type T (the type of elements in the array)\n * and return a boolean.\n *\n * @returns {number} The number of elements that satisfy the condition.\n *\n * @template T The type of elements in the array.\n *\n * @example\n * const arr = [1, 2, 3, 4, 5];\n * const isEven = (num) => num % 2 === 0;\n * const count = countBy(arr, isEven); // 2\n */\nexport const countBy = <T>(arr: T[], checkFunction: (arg: T) => boolean) =>\n  arr.reduce((count, value) => (checkFunction(value) ? count + 1 : count), 0)\n",o={},i="CountBy",p={id:"snippets/Typescript/Array/count-by",title:"CountBy",description:"",source:"@site/docs/snippets/Typescript/Array/count-by.mdx",sourceDirName:"snippets/Typescript/Array",slug:"/snippets/Typescript/Array/count-by",permalink:"/my-learning-curve/docs/snippets/Typescript/Array/count-by",draft:!1,unlisted:!1,editUrl:"https://github.com/edouardmisset/my-learning-curve/tree/main/docs/snippets/Typescript/Array/count-by.mdx",tags:[],version:"current",frontMatter:{},sidebar:"snippetsSidebar",previous:{title:"Array Performances",permalink:"/my-learning-curve/docs/snippets/Typescript/Array/array-performances"},next:{title:"Create a filter by dates HOF",permalink:"/my-learning-curve/docs/snippets/Typescript/Array/filter-by-dates"}},u={},y=[];function l(e){const n={h1:"h1",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"countby",children:"CountBy"}),"\n",(0,r.jsx)(a.Z,{language:"ts",children:c})]})}function m(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);