"use strict";(self.webpackChunkmy_learning_curve=self.webpackChunkmy_learning_curve||[]).push([[7201],{2841:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>y,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>u});var r=t(4848),a=t(8453),i=t(1432);const s="/**\n * Returns the object with the maximum value for the specified key from an array of objects.\n * If the array is empty, returns undefined.\n *\n * @template Obj - The type of the objects in the array. Must extend Record<string, unknown>.\n * @param {Obj[]} array - The array of objects to search.\n * @param {keyof Obj} key - The key to compare.\n * @returns {Obj | undefined} - The object with the maximum value for the specified key, or undefined if the array is empty.\n *\n * @example\n * const array = [{ id: 1, value: 10 }, { id: 2, value: 5 }, { id: 3, value: 20 }];\n * const key = 'value';\n * const maxObject = maxBy(array, key);\n * console.log(maxObject); // Outputs: { id: 3, value: 20 }\n *\n * @example\n * const emptyArray = [];\n * const key = 'value';\n * const maxObject = maxBy(emptyArray, key);\n * console.log(maxObject); // Outputs: undefined\n */\nexport const maxBy = <Obj extends Record<string, unknown>>(\n  array: Obj[],\n  key: keyof Obj,\n): Obj | undefined => {\n  if (array.length === 0) return undefined\n\n  return array.reduce((acc, val) => (acc[key] > val[key] ? acc : val), array[0])\n}\n",c={},y="Find the element in an array with the highest value for the specified key",o={id:"snippets/Typescript/Array/max-by",title:"Find the element in an array with the highest value for the specified key",description:"",source:"@site/docs/snippets/Typescript/Array/max-by.mdx",sourceDirName:"snippets/Typescript/Array",slug:"/snippets/Typescript/Array/max-by",permalink:"/my-learning-curve/docs/snippets/Typescript/Array/max-by",draft:!1,unlisted:!1,editUrl:"https://github.com/edouardmisset/my-learning-curve/tree/main/docs/snippets/Typescript/Array/max-by.mdx",tags:[],version:"current",frontMatter:{},sidebar:"snippetsSidebar",previous:{title:"Group an array of object by a key",permalink:"/my-learning-curve/docs/snippets/Typescript/Array/group-by"},next:{title:"Find the element in an array with the lowest value for the specified key",permalink:"/my-learning-curve/docs/snippets/Typescript/Array/min-by"}},p={},u=[];function d(e){const n={h1:"h1",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"find-the-element-in-an-array-with-the-highest-value-for-the-specified-key",children:"Find the element in an array with the highest value for the specified key"}),"\n",(0,r.jsx)(i.A,{language:"ts",children:s})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);