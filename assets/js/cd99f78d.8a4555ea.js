"use strict";(self.webpackChunkmy_learning_curve=self.webpackChunkmy_learning_curve||[]).push([[5331],{4895:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>u,default:()=>l,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var m=r(5893),a=r(1151),t=r(9286);const i="/**\n * Generates a random number between the specified minimum and maximum values (inclusive).\n * @param min The minimum value.\n * @param max The maximum value.\n * @returns A random number between the minimum and maximum values.\n */\nexport const random = (min: number, max: number): number =>\n  min + Math.random() * (max - min + 1)\n\n/**\n * Generates a random integer between the specified minimum and maximum values (inclusive).\n * @param minInt The minimum integer value.\n * @param maxInt The maximum integer value.\n * @returns A random integer between the minimum and maximum values.\n */\nexport const randomInt = (minInt: number, maxInt: number): number =>\n  minInt + Math.floor(Math.random() * (maxInt - minInt + 1))\n",s={},u="Get a random number from an interval",p={id:"snippets/Typescript/Number/random",title:"Get a random number from an interval",description:"",source:"@site/docs/snippets/Typescript/Number/random.mdx",sourceDirName:"snippets/Typescript/Number",slug:"/snippets/Typescript/Number/random",permalink:"/my-learning-curve/docs/snippets/Typescript/Number/random",draft:!1,unlisted:!1,editUrl:"https://github.com/edouardmisset/my-learning-curve/tree/main/docs/snippets/Typescript/Number/random.mdx",tags:[],version:"current",frontMatter:{},sidebar:"snippetsSidebar",previous:{title:"Multiply an array of numbers",permalink:"/my-learning-curve/docs/snippets/Typescript/Number/product"},next:{title:"Clamp a value inside a range",permalink:"/my-learning-curve/docs/snippets/Typescript/Number/range"}},o={},d=[];function c(e){const n={h1:"h1",...(0,a.a)(),...e.components};return(0,m.jsxs)(m.Fragment,{children:[(0,m.jsx)(n.h1,{id:"get-a-random-number-from-an-interval",children:"Get a random number from an interval"}),"\n",(0,m.jsx)(t.Z,{language:"ts",children:i})]})}function l(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,m.jsx)(n,{...e,children:(0,m.jsx)(c,{...e})}):c(e)}}}]);