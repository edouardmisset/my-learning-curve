"use strict";(self.webpackChunkmy_learning_curve=self.webpackChunkmy_learning_curve||[]).push([[7153],{3171:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>y,contentTitle:()=>p,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>d});var t=r(5893),a=r(1151),i=r(9286);const s="// Find an object in an array by a key and value.\n\nexport const createFindBy =\n  <Obj extends Record<string, unknown>>(key: keyof Obj) =>\n  (value: unknown) =>\n  (obj: Obj): boolean => {\n    if (!Object.prototype.hasOwnProperty.call(obj, key))\n      throw new Error(`Key \"${String(key)}\" does not exist in the object.`)\n\n    return obj[key] === value\n  }\n\nexport const findById = createFindBy('id')\nexport const findByName = createFindBy('name')\n",c={},p="Find an Object in an Array by Key and Value",o={id:"snippets/Typescript/array/find",title:"Find an Object in an Array by Key and Value",description:"",source:"@site/docs/snippets/Typescript/array/find.mdx",sourceDirName:"snippets/Typescript/array",slug:"/snippets/Typescript/array/find",permalink:"/my-learning-curve/docs/snippets/Typescript/array/find",draft:!1,unlisted:!1,editUrl:"https://github.com/edouardmisset/my-learning-curve/tree/main/docs/snippets/Typescript/array/find.mdx",tags:[],version:"current",frontMatter:{},sidebar:"snippetsSidebar",previous:{title:"Filter HOF",permalink:"/my-learning-curve/docs/snippets/Typescript/array/filter"},next:{title:"Sort HOF",permalink:"/my-learning-curve/docs/snippets/Typescript/array/sort"}},y={},d=[];function l(e){const n={h1:"h1",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"find-an-object-in-an-array-by-key-and-value",children:"Find an Object in an Array by Key and Value"}),"\n",(0,t.jsx)(i.Z,{language:"ts",children:s})]})}function u(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);