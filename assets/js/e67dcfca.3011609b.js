"use strict";(self.webpackChunkmy_learning_curve=self.webpackChunkmy_learning_curve||[]).push([[3368],{4783:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>l,toc:()=>m});var s=r(4848),a=r(8453),t=r(1432);const o="const arrayLength = 150_000\nconst someValues = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n// Unshift\n\nconst unshifted = [...someValues]\nconsole.time('Unshift')\n\nwhile (unshifted.length < arrayLength) {\n  unshifted.unshift(Number.NaN)\n}\n\nconsole.log(unshifted)\nconsole.timeEnd('Unshift') // 1032.787841796875 ms\n\n// Push\n\nconsole.time('Push and reverse')\nconst pushed = [...someValues].reverse() // 38.06005859375 ms\n\nwhile (pushed.length < arrayLength) {\n  pushed.push(Number.NaN)\n}\n\npushed.reverse()\n\nconsole.log(pushed)\nconsole.timeEnd('Push and reverse')\n\n// Create new array with spread\n\nconsole.time('New spread array')\n\nlet spreadCreated: unknown[]\nconst someLength = someValues.length\nif (someValues.length < arrayLength) {\n  spreadCreated = [\n    ...Array(arrayLength - someValues.length).fill(Number.NaN),\n    ...someValues,\n  ]\n}\n\nconsole.log(spreadCreated)\nconsole.timeEnd('New spread array') // 39.906982421875 ms\n\n// Create new array with concat\n\nconsole.time('New concat array')\n\nlet concatCreated: unknown[]\nif (someValues.length < arrayLength) {\n  concatCreated = Array(arrayLength - someValues.length)\n    .fill(Number.NaN)\n    .concat(someValues)\n}\n\nconsole.log(concatCreated)\nconsole.timeEnd('New concat array') // 14.547119140625 ms\n",c={},i="Array Performances",l={id:"snippets/Typescript/Array/array-performances",title:"Array Performances",description:"",source:"@site/docs/snippets/Typescript/Array/array-performances.mdx",sourceDirName:"snippets/Typescript/Array",slug:"/snippets/Typescript/Array/array-performances",permalink:"/my-learning-curve/docs/snippets/Typescript/Array/array-performances",draft:!1,unlisted:!1,editUrl:"https://github.com/edouardmisset/my-learning-curve/tree/main/docs/snippets/Typescript/Array/array-performances.mdx",tags:[],version:"current",frontMatter:{},sidebar:"snippetsSidebar",previous:{title:"How can I time a command's execution?",permalink:"/my-learning-curve/docs/snippets/Shell/timeit"},next:{title:"Normalize an array of object (or collection) by a given key",permalink:"/my-learning-curve/docs/snippets/Typescript/Array/collection-key-by"}},p={},m=[];function u(e){const n={h1:"h1",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"array-performances",children:"Array Performances"}),"\n",(0,s.jsx)(t.A,{language:"ts",children:o})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);