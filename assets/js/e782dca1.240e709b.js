"use strict";(self.webpackChunkmy_learning_curve=self.webpackChunkmy_learning_curve||[]).push([[6615],{9232:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>m,contentTitle:()=>p,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>o});var t=n(5893),s=n(1151),u=n(9286);const a="/**\n * This function calculates the product of all numbers provided as arguments.\n * It accepts either a single array of numbers or multiple number arguments.\n *\n * @param {...(number[] | number)[]} num - The numbers to multiply.\n * @returns {number} The product of all numbers.\n *\n * @example\n * product(1, 2, 3, 4)\n * // returns 24\n *\n * @example\n * product([1, 2, 3, 4])\n * // returns 24\n */\nexport const product = (...num: (number | number[])[]): number =>\n  (Array.isArray(num[0]) ? num[0] : (num as number[])).reduce(\n    (acc, val) => acc * val,\n    1,\n  )\n",i={},p="Multiply an array of numbers",c={id:"snippets/Typescript/Number/product",title:"Multiply an array of numbers",description:"",source:"@site/docs/snippets/Typescript/Number/product.mdx",sourceDirName:"snippets/Typescript/Number",slug:"/snippets/Typescript/Number/product",permalink:"/my-learning-curve/docs/snippets/Typescript/Number/product",draft:!1,unlisted:!1,editUrl:"https://github.com/edouardmisset/my-learning-curve/tree/main/docs/snippets/Typescript/Number/product.mdx",tags:[],version:"current",frontMatter:{},sidebar:"snippetsSidebar",previous:{title:"Check if a number is valid",permalink:"/my-learning-curve/docs/snippets/Typescript/Number/is-valid"},next:{title:"Get a random number from an interval",permalink:"/my-learning-curve/docs/snippets/Typescript/Number/random"}},m={},o=[];function l(e){const r={h1:"h1",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"multiply-an-array-of-numbers",children:"Multiply an array of numbers"}),"\n",(0,t.jsx)(u.Z,{language:"ts",children:a})]})}function d(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);